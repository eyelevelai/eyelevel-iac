apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  namespace: {{ .Values.service.namespace }}
  labels:
    app: {{ .Values.service.name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
    spec:
      nodeSelector:
        node: "{{ .Values.nodeSelector.node }}"
      runtimeClassName: nvidia
      tolerations:
        - key: "node"
          value: "{{ .Values.nodeSelector.node }}"
          effect: "NoSchedule"
      initContainers:
        #- name: wait-for-cache
        #  image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:latest
        #  imagePullPolicy: "Always"
        #  command: ['sh', '-c', "until nc -z {{ .Values.dependencies.cache }}; do echo waiting for cache; sleep 2; done"]
        - name: create-symlink
          image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:latest
          imagePullPolicy: "Always"
          command: ["/bin/sh", "-c", "--"]
          args: ["echo 'Running ldconfig_symlink.sh on this node'; /scripts/ldconfig_symlink.sh"]
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          volumeMounts:
            - name: {{ .Values.service.name }}
              mountPath: /scripts/ldconfig_symlink.sh
              subPath: ldconfig_symlink.sh
            - name: host-sbin
              mountPath: /host-sbin
            - name: host-usr-sbin
              mountPath: /host-usr-sbin
            - name: host-bin
              mountPath: /host-bin
            - name: host-usr-bin
              mountPath: /host-usr-bin
      containers:
        - name: {{ .Values.service.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pull }}"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          workingDir: /workspace
          # LOAD_MODEL=yes && LOCAL=0 && export PYTHONPATH=/workspace && celery -A summary.celery.appSummary worker -n summary-w1 --loglevel=INFO --concurrency=1 --queues=summary_inference_queue
          command:
            - /bin/bash
            - -c
            - |
              export PYTHONPATH=/workspace && while true; do sleep 30; done
            #- |
            #  export PYTHONPATH=/workspace && supervisord -c /workspace/supervisord.conf
          securityContext:
            runAsUser: {{ .Values.securityContext.runAsUser }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - ps aux | grep 'summary.celery.appSummary' || exit 1
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - ps aux | grep 'summary.celery.appSummary' || exit 1
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
            limits:
              cpu: "{{ .Values.resources.limits.cpu }}"
              memory: "{{ .Values.resources.limits.memory }}"
              nvidia.com/gpu: {{ .Values.resources.limits.gpu }}
            requests:
              cpu: "{{ .Values.resources.requests.cpu }}"
              memory: "{{ .Values.resources.requests.memory }}"
              nvidia.com/gpu: {{ .Values.resources.requests.gpu }}
          volumeMounts:
            - name: config-models
              mountPath: /workspace/config_models.py
              subPath: config_models.py
            - name: config-volume
              mountPath: /workspace/config.py
              subPath: config.py
            - name: supervisord-volume
              mountPath: /workspace/supervisord.conf
              subPath: supervisord.conf
      volumes:
        - name: config-models
          configMap:
            name: config-models-map
        - name: config-volume
          configMap:
            name: summary-config-py-map
        - name: supervisord-volume
          configMap:
            name: summary-supervisord-24gb-conf-map
        - name: {{ .Values.service.name }}
          configMap:
            name: ldconfig-symlink-map
            defaultMode: 0555
        - name: host-sbin
          hostPath:
            path: /sbin
            type: Directory
        - name: host-usr-sbin
          hostPath:
            path: /usr/sbin
            type: Directory
        - name: host-bin
          hostPath:
            path: /bin
            type: Directory
        - name: host-usr-bin
          hostPath:
            path: /usr/bin
            type: Directory